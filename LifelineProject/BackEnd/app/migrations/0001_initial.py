# Generated by Django 5.0.3 on 2025-02-24 14:19

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=17)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.JSONField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('studentid', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=4)),
                ('description', models.CharField(max_length=20)),
                ('credit', models.BooleanField()),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.gradesystem')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('module_gradetype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.gradesystem')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_enroll', models.DateTimeField(blank=True, null=True)),
                ('start_course', models.DateTimeField(blank=True, null=True)),
                ('end_course', models.DateTimeField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('courseLink', models.CharField(blank=True, max_length=255, null=True)),
                ('googleCourseID', models.CharField(blank=True, max_length=100, null=True)),
                ('googleCourseCode', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.branch')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.module')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('PRE-STUDENT', 'Pre-Student'), ('STUDENT', 'Student'), ('FACULTY', 'Faculty'), ('CASHIER', 'Cashier'), ('BRANCH_MANAGER', 'Branch Manager'), ('ADMIN', 'Admin'), ('SUPERVISOR', 'Supervisor')], max_length=14)),
                ('status', models.CharField(choices=[('NEW', 'New'), ('PARTIALLY_PAID', 'Partially Paid'), ('ON_HOLD', 'On Hold'), ('CONFIRMED', 'Confirmed'), ('ONGOING', 'Ongoing'), ('COMPLETE', 'Complete'), ('AWOL', 'AWOL'), ('EMPLOYED', 'Employed'), ('RESIGNED', 'Resigned')], default='NEW', max_length=14)),
                ('lastName', models.CharField(max_length=45)),
                ('firstName', models.CharField(max_length=75)),
                ('middleName', models.CharField(blank=True, max_length=45, null=True)),
                ('extensions', models.CharField(blank=True, max_length=5, null=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.branch')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.program')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDatetime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=20)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollDatetime', models.DateTimeField(auto_now_add=True)),
                ('grade', models.CharField(blank=True, max_length=4, null=True)),
                ('finishDatetime', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('DROPPED', 'Dropped')], default='PENDING', max_length=7)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('reportID', models.AutoField(primary_key=True, serialize=False)),
                ('date_generated', models.DateTimeField(auto_now_add=True)),
                ('report_type', models.CharField(default='general', max_length=100)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_data', models.TextField()),
                ('datetime', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.userprofile'),
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField()),
                ('link', models.CharField(blank=True, max_length=350, null=True)),
                ('linkname', models.CharField(blank=True, max_length=50, null=True)),
                ('imglink', models.CharField(blank=True, max_length=350, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('postedBy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramModules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.module')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.program')),
            ],
            options={
                'unique_together': {('program', 'module')},
            },
        ),
    ]
